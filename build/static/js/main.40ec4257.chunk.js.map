{"version":3,"sources":["reportWebVitals.js","AppNav.js","Guests/AddGuest.js","Guests/GuestList.js","Guests/EditGuest.js","Appointments/Calendar.js","Appointments/AddAppointment.js","Appointments/EditAppointment.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppNav","props","state","showLogoutDialog","openLogoutDialog","bind","closeLogoutDialog","this","setState","Navbar","color","dark","expand","NavbarBrand","href","Nav","style","position","left","transform","overflow","navbar","NavItem","NavLink","Button","size","className","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Footer","logout","Component","AddGuest","emptyGuest","accountId","licensePlate","firstName","lastName","phoneNumber","guest","showFirstNameError","showLastNameError","showLicensePlateError","showPhoneNumberNameError","handleSubmit","handleChange","event","a","preventDefault","formValidation","fetch","method","headers","body","JSON","stringify","response","ok","history","push","validated","target","value","name","console","log","Container","Form","onSubmit","FormGroup","Label","for","Input","type","id","onChange","tag","Link","to","GuestList","isLoading","selectedGuest","showDeleteDialog","guests","editGuest","deleteGuest","openDeleteDialog","closeDeleteDialog","updatedGuests","splice","findIndex","i","json","rows","map","marginRight","Table","EditGuest","match","params","require","colors","now","Date","Calendar","appointments","selectedAppointment","selected","cellHeight","showModal","locale","rowsPerHour","numberOfDays","startDate","handleCellSelection","handleItemEdit","handleRangeSelection","handleItemRemove","deleteAppointment","forEach","item","appointment","find","guestId","_id","appointmentId","startDateTime","appointmentStartDate","endDateTime","appointmentEndDate","classes","getMonday","date","day","getDay","diff","getDate","setDate","items","updatedAppointments","minDate","maxDate","getFullYear","getMonth","disablePrevButton","itemColors","autoScale","fixedHeader","onItemEdit","onCellSelect","onRangeSelection","onItemRemove","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","filter","slice","getSuggestionValue","suggestion","renderSuggestion","AddAppointment","emptyAppointment","employeeEmail","handleSuggestionChange","newValue","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","index","showGuestError","showEmailError","showStartDateError","showEndDateError","handleInputChange","handleStartDatetimeChange","handleEndDatetimeChange","toDate","inputProps","readOnly","timeFormat","EditAppointment","ShowEndDateError","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40ec4257.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavItem, NavLink, Button} from 'reactstrap';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass AppNav extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            showLogoutDialog: false,\r\n        };\r\n\r\n        this.openLogoutDialog = this.openLogoutDialog.bind(this);\r\n        this.closeLogoutDialog = this.closeLogoutDialog.bind(this);\r\n    }\r\n\r\n    openLogoutDialog(){\r\n        this.setState({showLogoutDialog: true});\r\n    }\r\n\r\n    closeLogoutDialog(){\r\n        this.setState({showLogoutDialog: false});\r\n    }\r\n\r\n    logout(){\r\n        this.closeLogoutDialog();\r\n    }\r\n\r\n    render() {\r\n        const {showLogoutDialog} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand href=\"/\">Parking Manager</NavbarBrand>\r\n                    <Nav style={{position: 'absolute', left: '50%', transform: 'translate(-50%)', overflow: 'hidden'}} navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/home\">Home</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/addGuest\">Add Guest</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/calendar\">Calendar</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/addAppointment\">Add Appointment</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Button size=\"sm\" className=\"ml-auto\" color=\"danger\" onClick={() => this.openLogoutDialog()}>\r\n                        Logout\r\n                    </Button>\r\n                </Navbar>\r\n                <Modal show={showLogoutDialog} onHide={() => this.closeLogoutDialog()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Guest</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to logout?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button color=\"danger\" onClick={() => this.logout()}>\r\n                            Logout\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={() => this.closeLogoutDialog()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNav;\r\n","import React, { Component } from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport { Container, Form, FormGroup, Input, Label, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AddGuest extends Component {\r\n\r\n    emptyGuest={\r\n        accountId: '',\r\n        licensePlate: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: ''\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            guest: this.emptyGuest,\r\n            showFirstNameError: false,\r\n            showLastNameError: false,\r\n            showLicensePlateError: false,\r\n            showPhoneNumberNameError: false\r\n        };\r\n\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n        this.handleChange= this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.formValidation()){\r\n            const guest = this.state.guest;\r\n            await fetch('/account', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(guest),\r\n            }).then((response) => {if (response.ok) {\r\n                this.props.history.push(\"/home\");\r\n            }});\r\n        }\r\n    }\r\n\r\n    formValidation(){\r\n        let validated = true;\r\n\r\n        this.setState({\r\n            showFirstNameError: false,\r\n            showLastNameError: false,\r\n            showLicensePlateError: false,\r\n            showPhoneNumberNameError: false\r\n        });\r\n\r\n        const guest = this.state.guest;\r\n        if ( guest.firstName === '' ){\r\n            this.setState({showFirstNameError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.lastName === '' ){\r\n            this.setState({showLastNameError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.licensePlate === '' ){\r\n            this.setState({showLicensePlateError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.phoneNumber === '' ){\r\n            this.setState({showPhoneNumberNameError: true});\r\n            validated = false;\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let guest={...this.state.guest};\r\n        guest[name] = value;\r\n        this.setState({guest});\r\n        console.log(guest);\r\n    }\r\n\r\n    render() {\r\n        const {showFirstNameError, showLastNameError, showLicensePlateError, showPhoneNumberNameError} = this.state;\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Add Guest</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"/>\r\n                        <div className=\"col\">\r\n                            <Container className=\"mt-5\">\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"firstName\">First Name</Label>\r\n                                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showFirstNameError ? 'Missing First Name' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"lastName\">Last Name</Label>\r\n                                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showLastNameError ? 'Missing Last Name' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"licensePlate\">License Plate</Label>\r\n                                        <Input type=\"text\" name=\"licensePlate\" id=\"licensePlate\" onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showLicensePlateError ? 'Missing License Plate' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"phoneNumber\">Phone Number</Label>\r\n                                        <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showPhoneNumberNameError ? 'Incorrect or missing Phone Number' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Button color=\"primary\" type=\"submit\" >Save</Button>{' '}\r\n                                        <Button color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"col\"/>\r\n                    </div>\r\n                </div>\r\n            </div> );\r\n    }\r\n}\r\nexport default AddGuest;","import React, {Component} from \"react\";\r\nimport {Table, Button} from \"reactstrap\";\r\nimport AppNav from \"../AppNav\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass GuestList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            selectedGuest: [],\r\n            showDeleteDialog: false,\r\n            guests: []\r\n        };\r\n\r\n        this.editGuest = this.editGuest.bind(this);\r\n        this.deleteGuest = this.deleteGuest.bind(this);\r\n        this.openDeleteDialog = this.openDeleteDialog.bind(this);\r\n        this.closeDeleteDialog = this.closeDeleteDialog.bind(this);\r\n    }\r\n\r\n    editGuest(id) {\r\n        this.props.history.push(`/editGuest/${id}`);\r\n    }\r\n\r\n    openDeleteDialog(guest) {\r\n        this.setState({selectedGuest: guest});\r\n        this.setState({showDeleteDialog: true});\r\n    }\r\n\r\n    closeDeleteDialog() {\r\n        this.setState({showDeleteDialog: false});\r\n    }\r\n\r\n    async deleteGuest() {\r\n        const id = this.state.selectedGuest.accountId;\r\n        await fetch(`/account/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedGuests = this.state.guests;\r\n            updatedGuests.splice(updatedGuests.findIndex(function(i){\r\n                return i.accountId === id;\r\n            }), 1);\r\n            this.setState({guests: updatedGuests, showDeleteDialog: false});\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/account');\r\n        const body = await response.json();\r\n        this.setState({guests: body, isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const {guests, isLoading, showDeleteDialog, selectedGuest} = this.state;\r\n\r\n        if (isLoading)\r\n            return (<div>Loading...</div>)\r\n\r\n        let rows =\r\n            guests.map(guest =>\r\n                <tr id={guest.accountId}>\r\n                    <td>{guest.firstName}</td>\r\n                    <td>{guest.lastName}</td>\r\n                    <td>{guest.licensePlate}</td>\r\n                    <td>{guest.phoneNumber}</td>\r\n                    <td><Button style={{marginRight: '10px'}} size=\"sm\" color=\"primary\"\r\n                                onClick={() => this.editGuest(guest.accountId)}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.openDeleteDialog(guest)}>Delete</Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Guest List</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"col-10\">\r\n                            <Table className=\"mt-4\">\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th>First Name</th>\r\n                                    <th>Last Name</th>\r\n                                    <th>License Plate</th>\r\n                                    <th>Telephone Number</th>\r\n                                    <th>Options</th>\r\n                                </tr>\r\n                                {rows}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={showDeleteDialog} onHide={() => this.closeDeleteDialog()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Guest</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to delete this guest?<br/>\r\n                        {selectedGuest.firstName} {selectedGuest.lastName}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button color=\"danger\" onClick={() => this.deleteGuest()}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={() => this.closeDeleteDialog()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuestList;\r\n","import React, {Component} from 'react'\r\nimport AppNav from \"../AppNav\";\r\nimport '../App.css';\r\nimport {Container, Form, FormGroup, Input, Label, Button} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class EditGuest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            guest: [],\r\n            showFirstNameError: false,\r\n            showLastNameError: false,\r\n            showLicensePlateError: false,\r\n            showPhoneNumberNameError: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(this.formValidation()){\r\n            const guest = this.state.guest;\r\n            await fetch('/account', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(guest),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    this.props.history.push(\"/home\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    formValidation(){\r\n        let validated = true;\r\n\r\n        this.setState({\r\n            showFirstNameError: false,\r\n            showLastNameError: false,\r\n            showLicensePlateError: false,\r\n            showPhoneNumberNameError: false\r\n        });\r\n\r\n        const guest = this.state.guest;\r\n        if ( guest.firstName === '' ){\r\n            this.setState({showFirstNameError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.lastName === '' ){\r\n            this.setState({showLastNameError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.licensePlate === '' ){\r\n            this.setState({showLicensePlateError: true});\r\n            validated = false;\r\n        }\r\n        if ( guest.phoneNumber === '' ){\r\n            this.setState({showPhoneNumberNameError: true});\r\n            validated = false;\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let guest = {...this.state.guest};\r\n        guest[name] = value;\r\n        this.setState({guest});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch(`/account/${this.props.match.params.id}`);\r\n        const body = await response.json();\r\n        this.setState({guest: body, isLoading: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {guest, isLoading, showFirstNameError, showLastNameError, showLicensePlateError, showPhoneNumberNameError} = this.state;\r\n\r\n        if (isLoading)\r\n            return (<div>Loading...</div>)\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Edit Guest</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"/>\r\n                        <div className=\"col\">\r\n                            <Container className=\"mt-5\">\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"firstName\">First Name</Label>\r\n                                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={guest.firstName}\r\n                                               onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showFirstNameError ? 'Missing First Name' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"lastName\">Last Name</Label>\r\n                                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={guest.lastName}\r\n                                               onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showLastNameError ? 'Missing Last Name' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"licensePlate\">License Plate</Label>\r\n                                        <Input type=\"text\" name=\"licensePlate\" id=\"licensePlate\"\r\n                                               value={guest.licensePlate} onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showLicensePlateError ? 'Missing License Plate' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"phoneNumber\">Phone Number</Label>\r\n                                        <Input type=\"text\" name=\"phoneNumber\" id=\"phoneNumber\" value={guest.phoneNumber}\r\n                                               onChange={this.handleChange}/>\r\n                                        <p style={{color: 'red'}}>{showPhoneNumberNameError ? 'Incorrect or missing Phone Number' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                                        <Button color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"col\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport {ReactAgenda} from 'react-agenda';\r\nimport {Button} from \"reactstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nrequire('moment/locale/en-gb.js');\r\n\r\nlet colors = {\r\n    'color-1': \"rgba(102, 195, 131 , 1)\",\r\n    \"color-2\": \"rgba(242, 177, 52, 1)\",\r\n    \"color-3\": \"rgba(235, 85, 59, 1)\"\r\n};\r\n\r\nlet now = new Date();\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appointments: [],\r\n            selectedAppointment: [],\r\n            showDeleteDialog: false,\r\n            selected: [],\r\n            cellHeight: 30,\r\n            showModal: false,\r\n            locale: \"nl\",\r\n            rowsPerHour: 2,\r\n            numberOfDays: 7,\r\n            startDate: new Date()\r\n        };\r\n        this.handleCellSelection = this.handleCellSelection.bind(this);\r\n        this.handleItemEdit = this.handleItemEdit.bind(this);\r\n        this.handleRangeSelection = this.handleRangeSelection.bind(this);\r\n        this.handleItemRemove = this.handleItemRemove.bind(this);\r\n        this.deleteAppointment = this.deleteAppointment.bind(this);\r\n        this.closeDeleteDialog = this.closeDeleteDialog.bind(this);\r\n    }\r\n\r\n    closeDeleteDialog() {\r\n        this.setState({showDeleteDialog: false});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('/account');\r\n        const guests = await response.json();\r\n\r\n        response = await fetch('/appointment');\r\n        const body = await response.json();\r\n\r\n        let appointments = [];\r\n\r\n        if (response.ok) {\r\n            body.forEach(function (item) {\r\n                    var appointment = {};\r\n                    let guest = guests.find(a => a.accountId === item.guestId);\r\n                    appointment._id = item.appointmentId;\r\n                    if (guest) {\r\n                        appointment.name = 'Appointment with ' + guest.firstName + ' ' + guest.lastName;\r\n                    }\r\n                    else {\r\n                        appointment.name = 'Appointment with unknown';\r\n                    }\r\n                    appointment.startDateTime = new Date(item.appointmentStartDate);\r\n                    appointment.endDateTime = new Date(item.appointmentEndDate);\r\n                    appointment.classes = 'color-1';\r\n\r\n                    appointments.push(appointment)\r\n                }\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            appointments: appointments,\r\n            isLoading: false,\r\n            startDate: this.getMonday()\r\n        });\r\n    }\r\n\r\n    getMonday() {\r\n        let date = new Date();\r\n        let day = date.getDay(),\r\n            diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\r\n        return new Date(date.setDate(diff));\r\n    }\r\n\r\n    handleCellSelection(item) {\r\n        console.log('handleCellSelection', item)\r\n    }\r\n\r\n    handleItemEdit(item) {\r\n        this.props.history.push(`/editAppointment/${item._id}`);\r\n    }\r\n\r\n    handleRangeSelection(item) {\r\n        console.log('handleRangeSelection', item)\r\n    }\r\n\r\n    async handleItemRemove(items, item) {\r\n        this.setState({selectedAppointment: item, showDeleteDialog: true});\r\n    }\r\n\r\n    async deleteAppointment() {\r\n        let id = this.state.selectedAppointment._id;\r\n        await fetch(`/appointment/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedAppointments = this.state.appointments;\r\n            updatedAppointments.splice(updatedAppointments.findIndex(function (i) {\r\n                return i._id === id;\r\n            }), 1);\r\n            this.setState({appointments: updatedAppointments, showDeleteDialog: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {showDeleteDialog} = this.state;\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Calendar</h2>\r\n                <ReactAgenda\r\n                    minDate={now}\r\n                    maxDate={new Date(now.getFullYear(), now.getMonth() + 3)}\r\n                    disablePrevButton={false}\r\n                    startDate={this.state.startDate}\r\n                    cellHeight={this.state.cellHeight}\r\n                    locale={this.state.locale}\r\n                    items={this.state.appointments}\r\n                    numberOfDays={this.state.numberOfDays}\r\n                    rowsPerHour={this.state.rowsPerHour}\r\n                    itemColors={colors}\r\n                    autoScale={false}\r\n                    fixedHeader={true}\r\n                    onItemEdit={this.handleItemEdit.bind(this)}\r\n                    onCellSelect={this.handleCellSelection.bind(this)}\r\n                    onRangeSelection={this.handleRangeSelection.bind(this)}\r\n                    onItemRemove={this.handleItemRemove.bind(this)}>\r\n                </ReactAgenda>\r\n                <Modal show={showDeleteDialog} onHide={() => this.closeDeleteDialog()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Appointment</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to delete this appointment?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button color=\"danger\" onClick={() => this.deleteAppointment()}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={() => this.closeDeleteDialog()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React, {Component} from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport {Container, Form, FormGroup, Input, Label, Button} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Datetime from \"react-datetime\";\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nlet guests;\r\n\r\nconst getSuggestions = value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : guests.filter(guest =>\r\n        guest.firstName.toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n};\r\n\r\nconst getSuggestionValue = suggestion => suggestion.firstName + \" \" + suggestion.lastName;\r\n\r\nconst renderSuggestion = suggestion => (\r\n    <span id={suggestion.accountId}>\r\n        {suggestion.firstName} {suggestion.lastName}\r\n    </span>\r\n);\r\n\r\nclass AddAppointment extends Component {\r\n\r\n    emptyAppointment = {\r\n        appointmentId: '',\r\n        guestId: '',\r\n        employeeEmail: '',\r\n        appointmentStartDate: '',\r\n        appointmentEndDate: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            appointment: this.emptyAppointment,\r\n            showGuestError: false,\r\n            showEmailError: false,\r\n            showStartDateError: false,\r\n            showEndDateError: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleStartDatetimeChange = this.handleStartDatetimeChange.bind(this);\r\n        this.handleEndDatetimeChange = this.handleEndDatetimeChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.formValidation()){\r\n            const appointment = this.state.appointment;\r\n            await fetch('/appointment', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(appointment),\r\n            }).then((response) => {\r\n                console.log(response);\r\n                if (response.ok) {\r\n                    this.props.history.push(\"/calendar\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    formValidation(){\r\n        let validated = true;\r\n\r\n        this.setState({\r\n            showGuestError: false,\r\n            showEmailError: false,\r\n            showStartDateError: false,\r\n            showEndDateError: false\r\n        });\r\n\r\n        const appointment = this.state.appointment;\r\n        if ( appointment.guestId === '' ){\r\n            this.setState({showGuestError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.employeeEmail === '' ){\r\n            this.setState({showEmailError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.appointmentStartDate === '' ){\r\n            this.setState({showStartDateError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.appointmentEndDate === '' ){\r\n            this.setState({showEndDateError: true});\r\n            validated = false;\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let appointment = {...this.state.appointment};\r\n        appointment[name] = value;\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleStartDatetimeChange(date) {\r\n        let appointment = {...this.state.appointment};\r\n        appointment.appointmentStartDate = date.toDate();\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleEndDatetimeChange(date) {\r\n        let appointment = {...this.state.appointment};\r\n        appointment.appointmentEndDate = date.toDate();\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleSuggestionChange = (event, {newValue}) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/account');\r\n        guests = await response.json();\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({value}) => {\r\n        this.setState({\r\n            suggestions: getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    onSuggestionSelected = (event, {suggestion, suggestionValue, index, method}) => {\r\n        event.preventDefault();\r\n        let appointment = {...this.state.appointment};\r\n        appointment.guestId = suggestion.accountId;\r\n        this.setState({appointment});\r\n    };\r\n\r\n    render() {\r\n        const {value, suggestions, showGuestError, showEmailError, showStartDateError, showEndDateError} = this.state;\r\n\r\n        const inputProps = {\r\n            value,\r\n            onChange: this.handleSuggestionChange\r\n        };\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Add Appointment</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"/>\r\n                        <div className=\"col\">\r\n                            <Container className=\"mt-5\">\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"guest\">Guest</Label>\r\n                                        <Autosuggest\r\n                                            name=\"guest\" id=\"guest\"\r\n                                            suggestions={suggestions}\r\n                                            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                                            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                                            getSuggestionValue={getSuggestionValue}\r\n                                            renderSuggestion={renderSuggestion}\r\n                                            onSuggestionSelected={this.onSuggestionSelected}\r\n                                            inputProps={inputProps}\r\n                                        />\r\n                                        <p style={{color: 'red'}}>{showGuestError ? 'Missing Guest, make sure to select one from the suggestions' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"employeeEmail\">Email of Employee</Label>\r\n                                        <Input type=\"email\" name=\"employeeEmail\" id=\"employeeEmail\"\r\n                                               onChange={this.handleInputChange}/>\r\n                                        <p style={{color: 'red'}}>{showEmailError ? 'Missing Email' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"appointmentStartDate\">Appointment Start Date</Label>\r\n                                        <Datetime type=\"text\" name=\"appointmentStartDate\" id=\"appointmentStartDate\"\r\n                                                  inputProps={{readOnly: true}}\r\n                                                  locale={'nl'}\r\n                                                  timeFormat=\"HH:mm\"\r\n                                                  onChange={this.handleStartDatetimeChange}/>\r\n                                        <p style={{color: 'red'}}>{showStartDateError ? 'Missing Start Date' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"appointmentEndDate\">Appointment End Date</Label>\r\n                                        <Datetime type=\"text\" name=\"appointmentEndDate\" id=\"appointmentEndDate\"\r\n                                                  inputProps={{readOnly: true}}\r\n                                                  locale={'nl'}\r\n                                                  timeFormat=\"HH:mm\"\r\n                                                  onChange={this.handleEndDatetimeChange}/>\r\n                                        <p style={{color: 'red'}}>{showEndDateError ? 'Missing End Date' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                                        <Button color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"col\"/>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default AddAppointment;","import React, {Component} from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport {Container, Form, FormGroup, Input, Label, Button} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Datetime from \"react-datetime\";\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nlet guests;\r\n\r\nconst getSuggestions = value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : guests.filter(guest =>\r\n        guest.firstName.toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n};\r\n\r\nconst getSuggestionValue = suggestion => suggestion.firstName + \" \" + suggestion.lastName;\r\n\r\nconst renderSuggestion = suggestion => (\r\n    <span id={suggestion.accountId}>\r\n        {suggestion.firstName} {suggestion.lastName}\r\n    </span>\r\n);\r\n\r\nclass EditAppointment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            appointment: [],\r\n            showGuestError: false,\r\n            showEmailError: false,\r\n            showStartDateError: false,\r\n            showEndDateError: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleStartDatetimeChange = this.handleStartDatetimeChange.bind(this);\r\n        this.handleEndDatetimeChange = this.handleEndDatetimeChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.formValidation()) {\r\n            const appointment = this.state.appointment;\r\n            await fetch('/appointment', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(appointment),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    this.props.history.push(\"/calendar\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    formValidation(){\r\n        let validated = true;\r\n\r\n        this.setState({\r\n            showGuestError: false,\r\n            showEmailError: false,\r\n            showStartDateError: false,\r\n            showEndDateError: false\r\n        });\r\n\r\n        const appointment = this.state.appointment;\r\n        if ( appointment.guestId === '' ){\r\n            this.setState({showGuestError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.employeeEmail === '' ){\r\n            this.setState({showEmailError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.appointmentStartDate === '' ){\r\n            this.setState({showStartDateError: true});\r\n            validated = false;\r\n        }\r\n        if ( appointment.appointmentEndDate === '' ){\r\n            this.setState({ShowEndDateError: true});\r\n            validated = false;\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let appointment = {...this.state.appointment};\r\n        appointment[name] = value;\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleStartDatetimeChange(date) {\r\n        let appointment = {...this.state.appointment};\r\n        appointment.appointmentStartDate = date.toDate();\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleEndDatetimeChange(date) {\r\n        let appointment = {...this.state.appointment};\r\n        appointment.appointmentEndDate = date.toDate();\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleSuggestionChange = (event, {newValue}) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('/account');\r\n        guests = await response.json();\r\n\r\n        response = await fetch(`/appointment/${this.props.match.params.id}`);\r\n        const body = await response.json();\r\n        let guest = guests.find(a => a.accountId === body.guestId);\r\n        let value = '';\r\n        if (guest) {\r\n             value = guest.firstName + \" \" + guest.lastName;\r\n        }\r\n        this.setState({value: value, appointment: body, isLoading: false});\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({value}) => {\r\n        this.setState({\r\n            suggestions: getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    onSuggestionSelected = (event, {suggestion, suggestionValue, index, method}) => {\r\n        event.preventDefault();\r\n        let appointment = {...this.state.appointment};\r\n        appointment.guestId = suggestion.accountId;\r\n        this.setState({appointment});\r\n    };\r\n\r\n    render() {\r\n        const {value, suggestions, appointment, showGuestError, showEmailError, showStartDateError, showEndDateError} = this.state;\r\n\r\n        const inputProps = {\r\n            value,\r\n            onChange: this.handleSuggestionChange\r\n        };\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Edit Appointment</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"/>\r\n                        <div className=\"col\">\r\n                            <Container className=\"mt-5\">\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"guest\">Guest</Label>\r\n                                        <Autosuggest\r\n                                            name=\"guest\" id=\"guest\"\r\n                                            suggestions={suggestions}\r\n                                            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                                            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                                            getSuggestionValue={getSuggestionValue}\r\n                                            renderSuggestion={renderSuggestion}\r\n                                            onSuggestionSelected={this.onSuggestionSelected}\r\n                                            inputProps={inputProps}\r\n                                        />\r\n                                        <p style={{color: 'red'}}>{showGuestError ? 'Missing Guest, make sure to select one from the suggestions' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"employeeEmail\">Email of Employee</Label>\r\n                                        <Input type=\"email\" name=\"employeeEmail\" id=\"employeeEmail\" value={appointment.employeeEmail}\r\n                                               onChange={this.handleInputChange}/>\r\n                                        <p style={{color: 'red'}}>{showEmailError ? 'Missing Email' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"appointmentStartDate\">Appointment Start Date</Label>\r\n                                        <Datetime type=\"text\" name=\"appointmentStartDate\" id=\"appointmentStartDate\" value={new Date(appointment.appointmentStartDate)}\r\n                                                  inputProps={{readOnly: true}}\r\n                                                  locale={'nl'}\r\n                                                  timeFormat=\"HH:mm\"\r\n                                                  onChange={this.handleStartDatetimeChange}/>\r\n                                        <p style={{color: 'red'}}>{showStartDateError ? 'Missing Start Date' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"appointmentEndDate\">Appointment End Date</Label>\r\n                                        <Datetime type=\"text\" name=\"appointmentEndDate\" id=\"appointmentEndDate\" value={new Date(appointment.appointmentEndDate)}\r\n                                                  inputProps={{readOnly: true}}\r\n                                                  locale={'nl'}\r\n                                                  timeFormat=\"HH:mm\"\r\n                                                  onChange={this.handleEndDatetimeChange}/>\r\n                                        <p style={{color: 'red'}}>{showEndDateError ? 'Missing End Date' : ''}</p>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                                        <Button color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"col\"/>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default EditAppointment;","import React, { Component } from 'react';\r\nimport {Redirect, Route, Switch, BrowserRouter as Router } from 'react-router-dom';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport AddGuest from './Guests/AddGuest';\r\nimport GuestList from './Guests/GuestList';\r\nimport EditGuest from './Guests/EditGuest';\r\nimport Calendar from './Appointments/Calendar';\r\nimport AddAppointment from './Appointments/AddAppointment';\r\nimport EditAppointment from './Appointments/EditAppointment';\r\n\r\nclass App extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Redirect to=\"/home\" />\r\n                    </Route>\r\n                    <Route path='/home' exact={true} component={GuestList}/>\r\n                    <Route path='/addGuest' exact={true} component={AddGuest}/>\r\n                    <Route path='/editGuest/:id' component={EditGuest}/>\r\n                    <Route path='/calendar' exact={true} component={Calendar}/>\r\n                    <Route path='/addAppointment' exact={true} component={AddAppointment}/>\r\n                    <Route path='/editAppointment/:id' component={EditAppointment}/>\r\n                </Switch>\r\n            </Router>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}