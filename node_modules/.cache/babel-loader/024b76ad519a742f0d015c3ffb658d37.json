{"ast":null,"code":"var _jsxFileName = \"D:\\\\S3Funny\\\\enigma-parking\\\\src\\\\Appointments\\\\Calendar.js\";\nimport React, { Component } from 'react';\nimport AppNav from '../AppNav';\nimport '../App.css';\nimport { ReactAgenda } from 'react-agenda';\nimport { Button } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('moment/locale/en-gb.js');\n\nlet colors = {\n  'color-1': \"rgba(102, 195, 131 , 1)\",\n  \"color-2\": \"rgba(242, 177, 52, 1)\",\n  \"color-3\": \"rgba(235, 85, 59, 1)\"\n};\nlet now = new Date();\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      selectedAppointment: [],\n      showDeleteDialog: false,\n      selected: [],\n      cellHeight: 30,\n      showModal: false,\n      locale: \"nl\",\n      rowsPerHour: 2,\n      numberOfDays: 7,\n      startDate: new Date()\n    };\n    this.handleCellSelection = this.handleCellSelection.bind(this);\n    this.handleItemEdit = this.handleItemEdit.bind(this);\n    this.handleRangeSelection = this.handleRangeSelection.bind(this);\n    this.handleItemRemove = this.handleItemRemove.bind(this);\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.closeDeleteDialog = this.closeDeleteDialog.bind(this);\n  }\n\n  closeDeleteDialog() {\n    this.setState({\n      showDeleteDialog: false\n    });\n  }\n\n  async componentDidMount() {\n    let response = await fetch('/account');\n    const guests = await response.json();\n    response = await fetch('/appointment');\n    const body = await response.json();\n    let appointments = [];\n\n    if (response.ok) {\n      body.forEach(function (item) {\n        var appointment = {};\n        let guest = guests.find(a => a.accountId === item.guestId);\n        appointment._id = item.appointmentId;\n\n        if (guest) {\n          appointment.name = 'Appointment with ' + guest.firstName + ' ' + guest.lastName;\n        } else {\n          appointment.name = 'Appointment with unknown';\n        }\n\n        appointment.startDateTime = new Date(item.appointmentStartDate);\n        appointment.endDateTime = new Date(item.appointmentEndDate);\n        appointment.classes = 'color-1';\n        appointments.push(appointment);\n      });\n    }\n\n    this.setState({\n      appointments: appointments,\n      isLoading: false,\n      startDate: this.getMonday()\n    });\n  }\n\n  getMonday() {\n    let date = new Date();\n    let day = date.getDay(),\n        diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n\n    return new Date(date.setDate(diff));\n  }\n\n  handleCellSelection(item) {\n    console.log('handleCellSelection', item);\n  }\n\n  handleItemEdit(item) {\n    this.props.history.push(`/editAppointment/${item._id}`);\n  }\n\n  handleRangeSelection(item) {\n    console.log('handleRangeSelection', item);\n  }\n\n  async handleItemRemove(items, item) {\n    this.setState({\n      selectedAppointment: item,\n      showDeleteDialog: true\n    });\n  }\n\n  async deleteAppointment() {\n    let id = this.state.selectedAppointment._id;\n    await fetch(`/appointment/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedAppointments = this.state.appointments;\n      updatedAppointments.splice(updatedAppointments.findIndex(function (i) {\n        return i._id === id;\n      }), 1);\n      this.setState({\n        appointments: updatedAppointments,\n        showDeleteDialog: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      showDeleteDialog\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-5\",\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactAgenda, {\n        minDate: now,\n        maxDate: new Date(now.getFullYear(), now.getMonth() + 3),\n        disablePrevButton: false,\n        startDate: this.state.startDate,\n        cellHeight: this.state.cellHeight,\n        locale: this.state.locale,\n        items: this.state.appointments,\n        numberOfDays: this.state.numberOfDays,\n        rowsPerHour: this.state.rowsPerHour,\n        itemColors: colors,\n        autoScale: false,\n        fixedHeader: true,\n        onItemEdit: this.handleItemEdit.bind(this),\n        onCellSelect: this.handleCellSelection.bind(this),\n        onRangeSelection: this.handleRangeSelection.bind(this),\n        onItemRemove: this.handleItemRemove.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showDeleteDialog,\n        onHide: () => this.closeDeleteDialog(),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Delete Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Are you sure you want to delete this appointment?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: () => this.deleteAppointment(),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => this.closeDeleteDialog(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["D:/S3Funny/enigma-parking/src/Appointments/Calendar.js"],"names":["React","Component","AppNav","ReactAgenda","Button","Modal","require","colors","now","Date","Calendar","constructor","props","state","appointments","selectedAppointment","showDeleteDialog","selected","cellHeight","showModal","locale","rowsPerHour","numberOfDays","startDate","handleCellSelection","bind","handleItemEdit","handleRangeSelection","handleItemRemove","deleteAppointment","closeDeleteDialog","setState","componentDidMount","response","fetch","guests","json","body","ok","forEach","item","appointment","guest","find","a","accountId","guestId","_id","appointmentId","name","firstName","lastName","startDateTime","appointmentStartDate","endDateTime","appointmentEndDate","classes","push","isLoading","getMonday","date","day","getDay","diff","getDate","setDate","console","log","history","items","id","method","headers","then","updatedAppointments","splice","findIndex","i","render","getFullYear","getMonth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport {ReactAgenda} from 'react-agenda';\r\nimport {Button} from \"reactstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nrequire('moment/locale/en-gb.js');\r\n\r\nlet colors = {\r\n    'color-1': \"rgba(102, 195, 131 , 1)\",\r\n    \"color-2\": \"rgba(242, 177, 52, 1)\",\r\n    \"color-3\": \"rgba(235, 85, 59, 1)\"\r\n};\r\n\r\nlet now = new Date();\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appointments: [],\r\n            selectedAppointment: [],\r\n            showDeleteDialog: false,\r\n            selected: [],\r\n            cellHeight: 30,\r\n            showModal: false,\r\n            locale: \"nl\",\r\n            rowsPerHour: 2,\r\n            numberOfDays: 7,\r\n            startDate: new Date()\r\n        };\r\n        this.handleCellSelection = this.handleCellSelection.bind(this);\r\n        this.handleItemEdit = this.handleItemEdit.bind(this);\r\n        this.handleRangeSelection = this.handleRangeSelection.bind(this);\r\n        this.handleItemRemove = this.handleItemRemove.bind(this);\r\n        this.deleteAppointment = this.deleteAppointment.bind(this);\r\n        this.closeDeleteDialog = this.closeDeleteDialog.bind(this);\r\n    }\r\n\r\n    closeDeleteDialog() {\r\n        this.setState({showDeleteDialog: false});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('/account');\r\n        const guests = await response.json();\r\n\r\n        response = await fetch('/appointment');\r\n        const body = await response.json();\r\n\r\n        let appointments = [];\r\n\r\n        if (response.ok) {\r\n            body.forEach(function (item) {\r\n                    var appointment = {};\r\n                    let guest = guests.find(a => a.accountId === item.guestId);\r\n                    appointment._id = item.appointmentId;\r\n                    if (guest) {\r\n                        appointment.name = 'Appointment with ' + guest.firstName + ' ' + guest.lastName;\r\n                    }\r\n                    else {\r\n                        appointment.name = 'Appointment with unknown';\r\n                    }\r\n                    appointment.startDateTime = new Date(item.appointmentStartDate);\r\n                    appointment.endDateTime = new Date(item.appointmentEndDate);\r\n                    appointment.classes = 'color-1';\r\n\r\n                    appointments.push(appointment)\r\n                }\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            appointments: appointments,\r\n            isLoading: false,\r\n            startDate: this.getMonday()\r\n        });\r\n    }\r\n\r\n    getMonday() {\r\n        let date = new Date();\r\n        let day = date.getDay(),\r\n            diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\r\n        return new Date(date.setDate(diff));\r\n    }\r\n\r\n    handleCellSelection(item) {\r\n        console.log('handleCellSelection', item)\r\n    }\r\n\r\n    handleItemEdit(item) {\r\n        this.props.history.push(`/editAppointment/${item._id}`);\r\n    }\r\n\r\n    handleRangeSelection(item) {\r\n        console.log('handleRangeSelection', item)\r\n    }\r\n\r\n    async handleItemRemove(items, item) {\r\n        this.setState({selectedAppointment: item, showDeleteDialog: true});\r\n    }\r\n\r\n    async deleteAppointment() {\r\n        let id = this.state.selectedAppointment._id;\r\n        await fetch(`/appointment/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedAppointments = this.state.appointments;\r\n            updatedAppointments.splice(updatedAppointments.findIndex(function (i) {\r\n                return i._id === id;\r\n            }), 1);\r\n            this.setState({appointments: updatedAppointments, showDeleteDialog: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {showDeleteDialog} = this.state;\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Calendar</h2>\r\n                <ReactAgenda\r\n                    minDate={now}\r\n                    maxDate={new Date(now.getFullYear(), now.getMonth() + 3)}\r\n                    disablePrevButton={false}\r\n                    startDate={this.state.startDate}\r\n                    cellHeight={this.state.cellHeight}\r\n                    locale={this.state.locale}\r\n                    items={this.state.appointments}\r\n                    numberOfDays={this.state.numberOfDays}\r\n                    rowsPerHour={this.state.rowsPerHour}\r\n                    itemColors={colors}\r\n                    autoScale={false}\r\n                    fixedHeader={true}\r\n                    onItemEdit={this.handleItemEdit.bind(this)}\r\n                    onCellSelect={this.handleCellSelection.bind(this)}\r\n                    onRangeSelection={this.handleRangeSelection.bind(this)}\r\n                    onItemRemove={this.handleItemRemove.bind(this)}>\r\n                </ReactAgenda>\r\n                <Modal show={showDeleteDialog} onHide={() => this.closeDeleteDialog()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Appointment</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to delete this appointment?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button color=\"danger\" onClick={() => this.deleteAppointment()}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={() => this.closeDeleteDialog()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}