{"ast":null,"code":"var _jsxFileName = \"D:\\\\S3Funny\\\\enigma-parking\\\\src\\\\Appointments\\\\AddAppointment.js\";\nimport React, { Component } from 'react';\nimport AppNav from '../AppNav';\nimport '../App.css';\nimport { Container, Form, FormGroup, Input, Label, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Datetime from \"react-datetime\";\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet guests;\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : guests.filter(guest => guest.firstName.toLowerCase().slice(0, inputLength) === inputValue);\n};\n\nconst getSuggestionValue = suggestion => suggestion.firstName + \" \" + suggestion.lastName;\n\nconst renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"span\", {\n  id: suggestion.accountId,\n  children: [suggestion.firstName, \" \", suggestion.lastName]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 5\n}, this);\n\nclass AddAppointment extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyAppointment = {\n      guestId: '',\n      emailEmployee: '',\n      appointmentDate: ''\n    };\n\n    this.handleSuggestionChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.onSuggestionSelected = (event, {\n      suggestion,\n      suggestionValue,\n      index,\n      method\n    }) => {\n      event.preventDefault();\n      let appointment = { ...this.state.appointment\n      };\n      appointment.guestId = suggestion.accountId;\n      this.setState({\n        appointment\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      appointment: this.emptyAppointment\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDatetimeChange = this.handleDatetimeChange.bind(this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const appointment = this.state.appointment;\n    await fetch('/appointment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(appointment)\n    }).then(response => {\n      if (response.status === 201) {\n        this.props.history.push(\"/calender\");\n      }\n    });\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let appointment = { ...this.state.appointment\n    };\n    appointment[name] = value;\n    this.setState({\n      appointment\n    });\n  }\n\n  handleDatetimeChange(date) {\n    let appointment = { ...this.state.appointment\n    };\n    appointment.appointmentDate = date.toDate();\n    this.setState({\n      appointment\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/account');\n    guests = await response.json();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      value,\n      onChange: this.handleSuggestionChange\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mt-5\",\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              className: \"mt-5\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"guest\",\n                    children: \"Guest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n                    name: \"guest\",\n                    id: \"guest\",\n                    suggestions: suggestions,\n                    onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n                    onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n                    getSuggestionValue: getSuggestionValue,\n                    renderSuggestion: renderSuggestion,\n                    onSuggestionSelected: this.onSuggestionSelected,\n                    inputProps: inputProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"emailEmployee\",\n                    children: \"Email of Employee\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"emailEmployee\",\n                    id: \"emailEmployee\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"appointmentDate\",\n                    children: \"Appointment Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n                    type: \"text\",\n                    name: \"appointmentDate\",\n                    id: \"appointmentDate\",\n                    onChange: this.handleDatetimeChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 41\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    tag: Link,\n                    to: \"/home\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["D:/S3Funny/enigma-parking/src/Appointments/AddAppointment.js"],"names":["React","Component","AppNav","Container","Form","FormGroup","Input","Label","Button","Link","Datetime","Autosuggest","guests","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","guest","firstName","slice","getSuggestionValue","suggestion","lastName","renderSuggestion","accountId","AddAppointment","constructor","props","emptyAppointment","guestId","emailEmployee","appointmentDate","handleSuggestionChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","index","method","preventDefault","appointment","state","handleSubmit","bind","handleInputChange","handleDatetimeChange","fetch","headers","body","JSON","stringify","then","response","status","history","push","target","name","date","toDate","componentDidMount","json","isLoading","render","inputProps","onChange"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport AppNav from '../AppNav';\r\nimport '../App.css';\r\nimport {Container, Form, FormGroup, Input, Label, Button} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport Datetime from \"react-datetime\";\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nlet guests;\r\n\r\nconst getSuggestions = value => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0 ? [] : guests.filter(guest =>\r\n        guest.firstName.toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n};\r\n\r\nconst getSuggestionValue = suggestion => suggestion.firstName + \" \" + suggestion.lastName;\r\n\r\nconst renderSuggestion = suggestion => (\r\n    <span id={suggestion.accountId}>\r\n        {suggestion.firstName} {suggestion.lastName}\r\n    </span>\r\n);\r\n\r\nclass AddAppointment extends Component {\r\n\r\n    emptyAppointment = {\r\n        guestId: '',\r\n        emailEmployee: '',\r\n        appointmentDate: '',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            suggestions: [],\r\n            appointment: this.emptyAppointment\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleDatetimeChange = this.handleDatetimeChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const appointment = this.state.appointment;\r\n        await fetch('/appointment', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(appointment),\r\n        }).then((response) => {\r\n            if (response.status === 201) {\r\n                this.props.history.push(\"/calender\");\r\n            }\r\n        });\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let appointment = {...this.state.appointment};\r\n        appointment[name] = value;\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleDatetimeChange(date) {\r\n        let appointment = {...this.state.appointment};\r\n        appointment.appointmentDate = date.toDate();\r\n        this.setState({appointment});\r\n    }\r\n\r\n    handleSuggestionChange = (event, {newValue}) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/account');\r\n        guests = await response.json();\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onSuggestionsFetchRequested = ({value}) => {\r\n        this.setState({\r\n            suggestions: getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    onSuggestionSelected = (event, {suggestion, suggestionValue, index, method}) => {\r\n        event.preventDefault();\r\n        let appointment = {...this.state.appointment};\r\n        appointment.guestId = suggestion.accountId;\r\n        this.setState({appointment});\r\n    };\r\n\r\n    render() {\r\n        const {value, suggestions} = this.state;\r\n\r\n        const inputProps = {\r\n            value,\r\n            onChange: this.handleSuggestionChange\r\n        };\r\n\r\n        return (\r\n            <div><AppNav/>\r\n                <h2 className=\"text-center mt-5\">Add Appointment</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"/>\r\n                        <div className=\"col\">\r\n                            <Container className=\"mt-5\">\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"guest\">Guest</Label>\r\n                                        <Autosuggest\r\n                                            name=\"guest\" id=\"guest\"\r\n                                            suggestions={suggestions}\r\n                                            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                                            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                                            getSuggestionValue={getSuggestionValue}\r\n                                            renderSuggestion={renderSuggestion}\r\n                                            onSuggestionSelected={this.onSuggestionSelected}\r\n                                            inputProps={inputProps}\r\n                                        />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"emailEmployee\">Email of Employee</Label>\r\n                                        <Input type=\"text\" name=\"emailEmployee\" id=\"emailEmployee\"\r\n                                               onChange={this.handleInputChange}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"appointmentDate\">Appointment Date</Label>\r\n                                        <Datetime type=\"text\" name=\"appointmentDate\" id=\"appointmentDate\"\r\n                                                  onChange={this.handleDatetimeChange}/>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                                        <Button color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"col\"/>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}